rm(list=ls())
# Loading
library(readxl)
library(ggplot2)
library(grid)
# xls files
my_data <- read_excel("example.xlsx")
my_data=as.data.frame(my_data)
my_data$Y = as.numeric(my_data$Y)
unique(my_data$group)
my_data$X = factor(my_data$X,levels = c("MOI 25","MOI 50","MOI 125","MOI 250", "MOI 500","6.25ul", "12.5ul","25ul","0", "anti-CD3"))
my_data$group = factor(my_data$group,levels = c("E. coli", "E. faecalis","K. pneumoniae","5-OP-RU","no-treatment","anti-CD3" ))
saveRDS(my_data, file = "my_data.rds")
rm(list=ls())
# Loading
library(readxl)
library(ggplot2)
library(grid)
readRDS(file = "my_data.rds")
a= ggplot(my_data, aes(x=X, y=Y, fill=condition)) +
geom_bar(stat="identity", position="dodge") +
facet_grid(~ group, scale="free", space="free_x")+theme_bw()+xlab("")+ylab("Y")+
theme(#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text=element_text(size=8,colour="black"),text=element_text(size=8,colour="black"),
plot.title =element_text(size=8,colour="black",hjust = 0.5),
axis.title = element_text(size=8,colour="black"),panel.spacing = unit(0, "lines"))
readRDS(file = "my_data.rds")
my_data <-readRDS(file = "my_data.rds")
a= ggplot(my_data, aes(x=X, y=Y, fill=condition)) +
geom_bar(stat="identity", position="dodge") +
facet_grid(~ group, scale="free", space="free_x")+theme_bw()+xlab("")+ylab("Y")+
theme(#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text=element_text(size=8,colour="black"),text=element_text(size=8,colour="black"),
plot.title =element_text(size=8,colour="black",hjust = 0.5),
axis.title = element_text(size=8,colour="black"),panel.spacing = unit(0, "lines"))
ggsave(a,file="graph.png", width=9, height=5)
rm(list=ls())
# Loading
library(readxl)
library(ggplot2)
library(grid)
my_data <-readRDS(file = "my_data.rds")
a= ggplot(my_data, aes(x=X, y=Y, fill=condition)) +
geom_bar(stat="identity", position="dodge") +
facet_grid(~ group, scale="free", space="free_x")+theme_bw()+xlab("")+ylab("Y")+
theme(#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text=element_text(size=8,colour="black"),text=element_text(size=8,colour="black"),
plot.title =element_text(size=8,colour="black",hjust = 0.5),
axis.title = element_text(size=8,colour="black"),panel.spacing = unit(0, "lines"))
ggsave(a,file="graph.png", width=5, height=5)
ggsave(a,file="graph.png", width=9, height=3)
rm(list=ls())
library(ggplot2)
library(vegan)
library(permute)
library(lattice)
library(plyr)
library(getopt)
library(ggfortify)
library(ade4)
library(ggpubr)
library(swimplot)
library(dplyr)
library(openxlsx)
rm(list=ls())
library(ggplot2)
library(vegan)
library(permute)
library(lattice)
library(plyr)
library(getopt)
library(ggfortify)
library(ade4)
library(ggpubr)
library(swimplot)
library(dplyr)
library(openxlsx)
group = read.csv("../analysis/A01.1-add-meta/group_09_23.csv")
group = group[order(group$days.sample.collect),]
group = group[order(match(group$patient_rename,unique(group$patient_rename))),]
group = group[order(match(group$clinical.benefit,c("Responder","Nonresponder"))),]
group = group[order(match(group$Tumor,unique(group$Tumor))),]
ID = unique(group$patient)
first_sample = NULL
for(i in ID){
tmp = group[group$patient == i,]
tmp = tmp[tmp$days.sample.collect == min(tmp$days.sample.collect),]
first_sample = rbind(first_sample,tmp)
}
first_sample = first_sample[first_sample$days.sample.collect < 180,]
dat = read.csv("../analysis/A01.1-add-meta/cohort_09_23.csv")
dat=as.data.frame(dat)
dat$RecordID = gsub("\\.0",".",dat$RecordID)
library(ggplot2)
library(vegan)
library(permute)
library(lattice)
library(plyr)
library(getopt)
library(ggfortify)
library(ade4)
library(ggpubr)
color=c("#A94643","#3E4A7B","#BCBDB8")
###########################
dat=read.csv("../analysis/A01.1-add-meta/jhmi-sears-non-melanoma.genus.txt",sep="\t",row.names = 1,check.names = F)
group = read.csv("../analysis/A01.1-add-meta/group_09_23.csv",check.names = F,row.names =1)
dat=dat[rownames(group),]
data=as.data.frame(dat[,10:ncol(dat)])
View(data)
#########################################
GroupCols = c("#eb3eab", "#FF9AA2", "#FFDAC1", "#E2F0CB", "#B5EAD7", "#C7CEEA", "#8e7cc3", "#f94144","#f8961e","#f9b14a","#f9c74f","#90be6d","#82d3d1","#4d908e","#6ec2e5","#277da1","#8DD3C7", "#FFFFB3", "#BEBADA","#e4e4e4")
numTx     = 19
A = cbind(Patient=group$patient_rename,response=group$clinical.benefit,days = as.numeric(group$days.sample.collect),tumor=group$Tumor,data)#[,-ncol(data)]
# calculate mean for each patient by each genus
##### aggA            = aggregate( .~ RecordID + response, data=A, FUN=mean)
cmaggA          = colMeans(A[5:ncol(A)])
selectedA       = names(cmaggA[order(cmaggA, decreasing=TRUE)])[1:19]
aggA            = A[,c("Patient", "response","days","tumor", selectedA)]
aggA$Other.taxa = 100-rowSums(aggA[5:ncol(aggA)])
aggA$sample = rownames(aggA)
library(reshape2)
meltA           = melt(aggA, id.vars = c("Patient", "response","days","sample","tumor"))
colnames(meltA) = c("Patient", "response","days","sample","Tumor", "Taxa", "Abundance")
meltA$Patient    = factor(meltA$Patient)
meltA$sample    = factor(meltA$sample,levels=rownames(group))
meltA$days = factor(meltA$days)
meltA$Patient  = factor(meltA$Patient,levels=unique(group$patient_rename))
meltA$Taxa = gsub("k_Bacteria.p_Firmicutes.c_Clostridia.o_Clostridiales.f_unassigned.g_unassigned",
"o_Clostridiales.f_unassigned",meltA$Taxa)
meltA$Taxa = gsub("k_Bacteria.p_unassigned.c_unassigned.o_unassigned.f_unassigned.g_unassigned",
"k_Bacteria.p_unassigned",meltA$Taxa)
meltA$Taxa = gsub("k_Bacteria.p_Firmicutes.c_Bacilli.o_unassigned.f_unassigned.g_unassigned",
"c_Bacilli.o_unassigned",meltA$Taxa)
library(stringr)
meltA$Taxa = str_replace(meltA$Taxa, "k_.*.f_", "")
meltA$Taxa      = factor(meltA$Taxa, levels=rev(unique(meltA$Taxa)))
names(GroupCols) = unique(meltA$Taxa)
colnames(meltA) = c("Patient","response","days","sample","Tumor","Genus" ,"Abundance")
meltA_basal = meltA[meltA$Tumor == "BCC",]
meltA_basal = meltA_basal[order(match(meltA_basal$response,c("Responder","Nonresponder"))),]
meltA_basal$Patient = factor(meltA_basal$Patient,levels = unique(meltA_basal$Patient))
p1 <- ggplot(meltA_basal, aes(x=days, y=Abundance, fill=Genus)) +
geom_bar(position="stack", stat="identity", colour="white", size=0.25) +
theme_bw() +ggtitle("BCC")+
scale_fill_manual(values=GroupCols) +
theme(axis.text.x = element_text(size=8,angle=90, hjust=0.5, vjust=0.5,colour="black"),
axis.text = element_text(size=14, colour="black"),
axis.title.y =element_text(size=14),
panel.grid.major = element_blank(),plot.title = element_text(size=14,hjust = 0.5,vjust=0),
panel.grid.minor = element_blank(),
legend.position = "none",
strip.text.x = element_text(size = 8, angle = 90)) +
xlab(" ") +
ylab("% Abundance") +
facet_grid(~Patient, space="free_x", scale="free_x")
p1
info=meltA_basal[,c("Patient","response")]
info=unique(info)
length = c(nrow(info[info$response == unique(info$response)[1],]),
nrow(info[info$response == unique(info$response)[2],]))
info
g <- ggplot_gtable(ggplot_build(p1))
g
strips <- which(grepl('strip-', g$layout$name))
strips
#"#A94643","#3E4A7B",
pal= c(rep("#A94643",length[1]),rep("#3E4A7B",length[2]))
pal
for (i in seq_along(strips)) {
k <- which(grepl('rect', g$grobs[[strips[i]]]$grobs[[1]]$childrenOrder))
l <- which(grepl('titleGrob', g$grobs[[strips[i]]]$grobs[[1]]$childrenOrder))
g$grobs[[strips[i]]]$grobs[[1]]$children[[k]]$gp$fill <- pal[i]
g$grobs[[strips[i]]]$grobs[[1]]$children[[l]]$children[[1]]$gp$col <- "white"}
g
info
rm(list=ls())
library(ggplot2)
library(vegan)
library(permute)
library(lattice)
library(plyr)
library(getopt)
library(ggfortify)
library(ade4)
library(ggpubr)
library(swimplot)
library(dplyr)
library(reshape2)
group = read.csv("../analysis/A01.1-add-meta/group_09_23.csv",check.names = F)
group = group[order(group$days.sample.collect),]
group = group[order(match(group$patient_rename,unique(group$patient_rename))),]
group = group[order(match(group$clinical.benefit,c("Responder","Nonresponder"))),]
group = group[order(match(group$Tumor,unique(group$Tumor))),]
rownames(group) = group$sample_id
non_res = group[group$clinical.benefit == "Nonresponder",]
res = group[group$clinical.benefit == "Responder",]
dat=read.csv(paste0("../analysis/A01.1-add-meta/jhmi-sears-non-melanoma.genus.txt"),sep="\t",row.names = 1,check.names = F)
dat=as.data.frame(dat[,10:ncol(dat)])
dat=dat[,which(colSums(dat)>0.01)]
## non_res
nonres_dat=dat[rownames(non_res),]
tab.dist<-vegdist(nonres_dat,method="bray")
nonres_mat = as.matrix(tab.dist)
nonres_mat_long = subset(melt(nonres_mat), value!=0)
for (i in 1:nrow(nonres_mat_long)){
if (non_res[nonres_mat_long[i,"Var1"],"patient"] == non_res[nonres_mat_long[i,"Var2"],"patient"]){
nonres_mat_long[i,"group"] = "within_patient"
}else{
nonres_mat_long[i,"group"] = "across_patient"
}
}
nonres_mat_long$response = "Nonresponder"
## res
res_dat=dat[rownames(res),]
tab.dist<-vegdist(res_dat,method="bray")
res_mat = as.matrix(tab.dist)
res_mat_long = subset(melt(res_mat), value!=0)
for (i in 1:nrow(res_mat_long)){
if (res[res_mat_long[i,"Var1"],"patient"] == res[res_mat_long[i,"Var2"],"patient"]){
res_mat_long[i,"group"] = "within_patient"
}else{
res_mat_long[i,"group"] = "across_patient"
}
}
res_mat_long$response = "Responder"
mat_long = as.data.frame(rbind(nonres_mat_long,res_mat_long))
mat_long$group = factor(mat_long$group,level= c("within_patient","across_patient"))
color = c("within_patient"="#ADDB88","across_patient" ="#369F2D")
saveRDS(mat_long, file = "my_data2.rds")
a = ggplot(mat_long, aes(x =group, y =value ,fill=group))+
geom_boxplot(width=0.4) +# geom_point()+
scale_fill_manual(values=color)+ scale_colour_manual(values=color)+
stat_compare_means(comparisons =list(c("within_patient","across_patient" )),method = 'wilcox.test',size=4)+
coord_cartesian(ylim = c(min(mat_long$value)*1,max(mat_long$value)*1.1))+
theme_bw()+xlab("")+ylab("Distance")+facet_wrap(vars(response))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text=element_text(size=12,colour="black"),text=element_text(size=12,colour="black"),
plot.title =element_text(size=12,colour="black",hjust = 0.5),
axis.title = element_text(size=12,colour="black",),axis.text.x = element_blank(),axis.ticks.x = element_blank())
a
my_data2 <-readRDS(file = "my_data2.rds")
rm(list=ls())
# Loading
library(ggplot2)
library(grid)
my_data2 <-readRDS(file = "my_data2.rds")
View(my_data2)
a = ggplot(mat_long, aes(x =group, y =value ,fill=group))+
geom_boxplot(width=0.4) +# geom_point()+
scale_fill_manual(values=c("within_patient"="#ADDB88","across_patient" ="#369F2D"))+ scale_colour_manual(values=c("within_patient"="#ADDB88","across_patient" ="#369F2D"))+
stat_compare_means(comparisons =list(c("within_patient","across_patient" )),method = 'wilcox.test',size=4)+
coord_cartesian(ylim = c(min(mat_long$value)*1,max(mat_long$value)*1.1))+
theme_bw()+xlab("")+ylab("Distance")+facet_wrap(vars(response))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text=element_text(size=12,colour="black"),text=element_text(size=12,colour="black"),
plot.title =element_text(size=12,colour="black",hjust = 0.5),
axis.title = element_text(size=12,colour="black",),axis.text.x = element_blank(),axis.ticks.x = element_blank())
my_data2 <-readRDS(file = "my_data2.rds")
a = ggplot(my_data2, aes(x =group, y =value ,fill=group))+
geom_boxplot(width=0.4) +# geom_point()+
scale_fill_manual(values=c("within_patient"="#ADDB88","across_patient" ="#369F2D"))+ scale_colour_manual(values=c("within_patient"="#ADDB88","across_patient" ="#369F2D"))+
stat_compare_means(comparisons =list(c("within_patient","across_patient" )),method = 'wilcox.test',size=4)+
coord_cartesian(ylim = c(min(my_data2$value)*1,max(my_data2$value)*1.1))+
theme_bw()+xlab("")+ylab("Distance")+facet_wrap(vars(response))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text=element_text(size=12,colour="black"),text=element_text(size=12,colour="black"),
plot.title =element_text(size=12,colour="black",hjust = 0.5),
axis.title = element_text(size=12,colour="black",),axis.text.x = element_blank(),axis.ticks.x = element_blank())
a
g <- ggplot_gtable(ggplot_build(p1))
g <- ggplot_gtable(ggplot_build(a))
g
strips <- which(grepl('strip-', g$layout$name))
strips
#"#A94643","#3E4A7B",
pal= c(rep("#A94643",1),rep("#3E4A7B",1))
for (i in seq_along(strips)) {
k <- which(grepl('rect', g$grobs[[strips[i]]]$grobs[[1]]$childrenOrder))
l <- which(grepl('titleGrob', g$grobs[[strips[i]]]$grobs[[1]]$childrenOrder))
g$grobs[[strips[i]]]$grobs[[1]]$children[[k]]$gp$fill <- pal[i]
g$grobs[[strips[i]]]$grobs[[1]]$children[[l]]$children[[1]]$gp$col <- "white"}
ggsave(g,file="graph2.png", width=9, height=3)
ggsave(g,file="graph2.png", width=5, height=3)
rm(list=ls())
# Loading
library(ggplot2)
library(grid)
my_data <-readRDS(file = "my_data.rds")
a= ggplot(my_data, aes(x=X, y=Y, fill=condition)) +
geom_bar(stat="identity", position="dodge") +
facet_grid(~ group, scale="free", space="free_x")+theme_bw()+xlab("")+ylab("Y")+
theme(#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text=element_text(size=8,colour="black"),text=element_text(size=8,colour="black"),
plot.title =element_text(size=8,colour="black",hjust = 0.5),
axis.title = element_text(size=8,colour="black"),panel.spacing = unit(0, "lines"))
ggsave(a,file="graph1.png", width=9, height=3)
my_data2 <-readRDS(file = "my_data2.rds")
a = ggplot(my_data2, aes(x =group, y =value ,fill=group))+
geom_boxplot(width=0.4) +# geom_point()+
scale_fill_manual(values=c("within_patient"="#ADDB88","across_patient" ="#369F2D"))+ scale_colour_manual(values=c("within_patient"="#ADDB88","across_patient" ="#369F2D"))+
stat_compare_means(comparisons =list(c("within_patient","across_patient" )),method = 'wilcox.test',size=4)+
coord_cartesian(ylim = c(min(my_data2$value)*1,max(my_data2$value)*1.1))+
theme_bw()+xlab("")+ylab("Distance")+facet_wrap(vars(response))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.text=element_text(size=12,colour="black"),text=element_text(size=12,colour="black"),
plot.title =element_text(size=12,colour="black",hjust = 0.5),
axis.title = element_text(size=12,colour="black",),axis.text.x = element_blank(),axis.ticks.x = element_blank())
g <- ggplot_gtable(ggplot_build(a))
strips <- which(grepl('strip-', g$layout$name))
#"#A94643","#3E4A7B",
pal= c(rep("#A94643",1),rep("#3E4A7B",1))
for (i in seq_along(strips)) {
k <- which(grepl('rect', g$grobs[[strips[i]]]$grobs[[1]]$childrenOrder))
l <- which(grepl('titleGrob', g$grobs[[strips[i]]]$grobs[[1]]$childrenOrder))
g$grobs[[strips[i]]]$grobs[[1]]$children[[k]]$gp$fill <- pal[i]
g$grobs[[strips[i]]]$grobs[[1]]$children[[l]]$children[[1]]$gp$col <- "white"}
ggsave(g,file="graph2.png", width=5, height=3)
